"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
exports.__esModule = true;
var uuid_1 = require("@smm/uuid");
var cookie_1 = require("@smm/cookie");
var env_1 = require("../../utils/env");
var frame_1 = require("../frame");
var const_1 = require("../const");
var device_1 = require("../result_fn/device");
var height_1 = require("../result_fn/height");
var width_1 = require("../result_fn/width");
var Device = /** @class */ (function (_super) {
    __extends(Device, _super);
    function Device(isdev, resultkv) {
        var _this = _super.call(this, isdev) || this;
        _this.common = {};
        for (var _i = 0, resultkv_1 = resultkv; _i < resultkv_1.length; _i++) {
            var item = resultkv_1[_i];
            _this.common[item.name] = item.value;
        }
        return _this;
    }
    Device.prototype.log_device = function (url) {
        this.ajax({
            type: "POST",
            url: url ? url : this.device_url(),
            contentType: "application/json",
            dataType: "json",
            data: JSON.stringify(this.parse(this.common))
        });
    };
    Device.prototype.parse = function (common) {
        var result = {};
        for (var key in common) {
            result[key] = common[key]();
        }
        return result;
    };
    Device.prototype.Inject = function () {
        var id = cookie_1.Cookie.Get(const_1.DeviceCookieID);
        if (!id) {
            var smm_device_id = uuid_1.UUID.Generate();
            // 判断站点存放cookie
            if (env_1.IsMetal()) {
                // 英文站
                cookie_1.Cookie.Set(const_1.DeviceCookieID, smm_device_id, 365 * 10, const_1.MetalCookieDomin); // 设置10年
            }
            else if (env_1.IsMMIPrice()) {
                // MMIPrice
                cookie_1.Cookie.Set(const_1.DeviceCookieID, smm_device_id, 365 * 10, const_1.MMIPriceCookieDomin); // 设置10年
            }
            else {
                // 中文站 默认domain smm.cn
                cookie_1.Cookie.Set(const_1.DeviceCookieID, smm_device_id, 365 * 10); // 设置10年
            }
            this.log_device();
        }
    };
    return Device;
}(frame_1.Frame));
exports.Device = Device;
var DefaultDevicePlugin = new Device(env_1.IsDev(), [device_1.deviceKV, width_1.widthKV, height_1.heightKV]);
exports.DefaultDevicePlugin = DefaultDevicePlugin;
